static bool IsNumber(char c) {
    return '0' <= c && c <= '9';
}
static int Parser(char[] source) {
    int integer = 0;
    int i;
    foreach (char c in source) {
        if (!IsNumber(c)) {
            throw new Exception("Not a number");
        }
        i = c - '0';
        integer = integer * 10 + i;
    }
    return integer;
}
protected System.Drawing.Color HexStringToColor(string hex) {
    hex = hex.Replace("#", "");

    if (hex.Length != 6)
        throw new Exception(hex + 
            " is not a valid 6-place hexadecimal color code.");

    string r, g, b;

    r = hex.Substring(0, 2);
    g = hex.Substring(2, 2);
    b = hex.Substring(4, 2);

    return System.Drawing.Color.FromArgb(HexStringToBase10Int(r), 
                                         HexStringToBase10Int(g), 
                                         HexStringToBase10Int(b));
}